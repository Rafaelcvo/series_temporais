IRkernel::installspec(user = FALSE)
install.packages('IRkernel')
IRkernel::installspec(user = FALSE)
install.packages("quantmod")
install.packages("quantmod")
install.packages('quantmod')
Imports curl
install.packages("quantmod")
library("quantmod")
install.packages("quantmod")
install.packages('curl')
install.packages('xts')
install.packages('zoo')
install.packages("curl")
install.packages("~/Downloads/quantmod_0.4-15.tar.gz", repos = NULL, type = "source")
install.packages("quantmod")
library(grid, lib.loc = "/usr/lib/R/library")
install.packages("dplyr")
install.packages("quantmod")
install.packages("quantmod")
install.packages("xts")
install.packages('https://cran.cnr.berkeley.edu/src/contrib/quadprog_1.5-5.tar.gz',dependencies = TRUE,repos = NULL,type ="source")
install.packages("dplR")
install.packages("quantmod")
install.packages("quantmod")
install.packages("quantmod")
install.packages("quantmod")
library('quantmod')
acoes <- "MGLU3.SA"
acoes
data_init <- as.Date("2019-01-01")
data_final <- as.Date("2019-12-31")
getSymbols(acoes, src = "yahoo", from = data_init, to=data_final)
View(MGLU3.SA)
View(MGLU3.SA)
head(MGLU3.SA)
summary(MGLU3.SA)
(18*4)
((18*4)+(10*5))*25
MGLU3.SA <- na.omit(MGLU3.SA)
chartSeries(MGLU3.SA)
addBBands()
is.na(MGLU3.SA)
is.na(MGLU3.SA).count()
MGLU3.SA <- na.omit(MGLU3.SA)
MGLU3.SA
add_BBands()
chartSeries(MGLU3.SA)
add_BBands()
setwd("~/git/series_temporais")
knitr::opts_chunk$set(echo = TRUE)
plot(USAccDeaths)
summary(USAccDeaths)
plot(USAccDeaths, type='o')
plot(USAccDeaths, type='-')
plot(USAccDeaths, type='o')
aggregate(USAccDeaths, nfrequency = 4, FUN = sum)
aggregate(USAccDeaths, nfreq=1, FUN = mean)
aggregate(USAccDeaths, nfrequency=1, FUN = mean)
aggregate(USAccDeaths, nfreq=1, FUN = mean)
plot(aggregate(USAccDeaths))
monthplot(USAccDeaths, col.base = 2, labels = month.abb)
USAccDeaths
window(USAccDeaths, stars=c(1973,5), end=c(1978,10))
window(USAccDeaths, start=c(1973,5), end=c(1978,10))
window(USAccDeaths, start=c(1973,5), end=c(1978,1))
diff(USAccDeaths)
10826-10017
log(USAccDeaths)
acf(USAccDeaths, lag.max = 25)
acf(USAccDeaths, lag.max = 1)
acf(USAccDeaths, lag.max = 50)
acf(USAccDeaths, lag.max = 100)
acf(USAccDeaths, lag.max = 20)
pacf(USAccDeaths, lag.max = 20)
plot(stl(USAccDeaths, "periodic"))
decompose(USAccDeaths)
d = decompose(USAccDeaths)
View(d)
plot(d$seasonal)
plot(d$tend)
plot(d$trend)
install.packages('forecast')
library(forecast)
mm = ma(USAccDeaths, order = 6)
mm
previsao = forecast(mm, h = 4)
previsao
plot(previsao)
mm = ma(USAccDeaths, order = 6)
mm
previsao = forecast(mm, h = 4)
previsao
plot(previsao)
x = arima(USAccDeaths, order = c(0,1,1))
View(x)
y = arima(USAccDeaths, order = c(0,1,1), seasonal = list(order=c(0,1,1), period = 6))
previsao = predict(y, n.ahead = 4)
View(previsao)
previsao
ar = auto.arima(USAccDeaths)
ar = auto.arima(USAccDeaths)
ar
previsao = forecast(ar, h=6)
previsao
previsao = forecast(ar, h=4)
previsao
plot(previsao)
previsao = forecast(ar, h=12)
previsao
plot(previsao)
